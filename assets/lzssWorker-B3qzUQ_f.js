function b(t,i){if(i.data.length!==t.byteLength*2)throw new Error("Data length does not match image data length");for(let e=0;e<t.byteLength;e+=2){const n=t.getUint16(e),c=((n&31744)>>10)*8,o=((n&992)>>5)*8,s=(n&31)*8;i.data[e*2]=c,i.data[e*2+1]=o,i.data[e*2+2]=s,i.data[e*2+3]=n&32768?0:255}}function p(t){const i=new DataView(new ArrayBuffer(t.length/2));for(let e=0;e<t.length;e+=4){const n=t[e],c=t[e+1],o=t[e+2],s=t[e+3];i.setUint16(e/2,n/8<<10|c/8<<5|o/8|(s?0:32768))}return i}const l=4096,B=2,U=18;function m(t,i){const e=new DataView(new ArrayBuffer(i));let n=t.byteLength,c=0,o=0,s=l-U;const a=new DataView(new ArrayBuffer(l+U-1));for(let r=0;r<l-U;r++)a.setInt8(r,32);let g=0;for(;;){if(g=Math.floor(g/2),g<256){if(--n<0)break;g=t.getUint8(o++)|65280}if(g&1){if(--n<0)break;const r=t.getUint8(o++);e.setUint8(c++,r),a.setUint8(s++,r),s&=l-1}else{if(--n<0)break;let r=t.getUint8(o++);if(--n<0)break;let f=t.getUint8(o++);r|=(f&240)<<4,f=(f&15)+B;for(let w=0;w<=f;w++){const y=a.getUint8(r+w&l-1);e.setUint8(c++,y),a.setUint8(s++,y),s&=l-1}}}return e}function L(t){const i=t.byteLength,e=new DataView(new ArrayBuffer(l+U-1)),n=new DataView(new ArrayBuffer(i*2));let c=l-U,o=0,s=0,a=0,g=0,r=0;for(let f=0;f<l-U;f++)e.setUint8(f,32);for(g=s++,a=0;o<i;){r===8&&(n.setUint8(g,a),g=s++,a=0,r=0);let f=0,w=0;const y=Math.min(U,i-o);if(o+B<i)for(let h=0;h<l;h++){let u=0;for(;u<y&&t.getUint8(o+u)===e.getUint8(h+u&l-1);)u++;if(u>f&&(f=u,w=h,f>=U))break}if(f<=B){const h=t.getUint8(o++);n.setUint8(s++,h),a|=1<<r,e.setUint8(c++,h),c&=l-1}else{const h=f-B-1;n.setUint8(s++,w&255),n.setUint8(s++,w>>4&240|h&15);for(let u=0;u<f;u++){const d=t.getUint8(o+u);e.setUint8(c++,d),c&=l-1}o+=f}r++}return r>0&&n.setUint8(g,a),new DataView(n.buffer.slice(0,s))}onmessage=async t=>{if(t.data.type==="compress"){const i=p(t.data.uIntArray),e=L(i);postMessage({id:t.data.id,type:"compressRes",dataBuffer:e.buffer},t.origin,[e.buffer])}if(t.data.type==="decompress"){const{compressedDataView:i,outputSize:e,width:n,height:c}=t.data,o=m(i,e),s=new OffscreenCanvas(n,c);s.width=n,s.height=c;const a=s.getContext("2d"),g=a==null?void 0:a.getImageData(0,0,s.width,s.height);if(!g||(b(o,g),!a))return;postMessage({id:t.data.id,type:"decompressRes",imageData:g})}};
